SI 206 W17
Put your name here: Jonathan Bain

----

Which option for the final project are you choosing -- 1, 2, or 3?

	I am doing Option 2
-----

THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?

	Movie

* What will that class take as input to its constructor?

	A dictionary containing information on 
		Its title
		Its director
		Its IMDB rating
		A list of its actors (check out the data and consider how to get a list of strings that represent actor names!)
		The number of languages in the movie
		As much information about company


* What will 1 instance of this class represent?

	One instance will represent all information I can possibly have about a movie.

* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?
	Title 
	Director
	IMDB Rating

* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 
ONE METHOD:
- What will the name of the method be?
	__str__

- What will the method do?
	Specify output format of a Movie instance if printed

- Will it take any additional input? 
	No

- Will it return anything? Should it change anything about the instance/an instance variable? 
	Nope

- Why is it useful for this class definition, in this program?
	Readable output will help me understand what is happening with my code as I develop it and I will better understand the data and how it's structured.	


ANOTHER METHOD:
- What will the name of the method be?
	pop_actor

- What will the method do?
	It will get rid of some of the actors that I do not want considered. I want to focus on A-listers with more lines

- Will it take any additional input? 
	No

- Will it return anything? Should it change anything about the instance/an instance variable? 
	It will change the list of actors by getting rid of one at a time
	
- Why is it useful for this class definition, in this program?
	There is only supposed to be the top billed actor in my table so this will help get rid of the others
	
[If you definitely want to have a third, feel free to answer those questions a third time, because you'll have to do so eventually. when you write documentation!]


* What will the tables in your database be?

	Tweets, Users & Movies

* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.
	Tweet:
		- text
		- Tweet ID (primary key)
		- The user who posted the tweet (represented by a reference to the users table)
		- The movie search this tweet came from (represented by a reference to the movies table)
		- Number favorites
		- Number retweets
	Your Users table should hold in each row:
		- User ID (primary key)
		- User screen name
		- Number of favorites that user has ever made
		- Any other information you want to deal with or find interesting…
	Your Movies table should hold in each row:
		- ID (primary key) (NOTE title is dangerous for a primary key, 2 movies could have the same title!)
		- Title of the movie
		- Director of the movie 
		- Number of languages the movie has
		- IMDB rating of the movie
		- The top billed (first in the list) actor in the movie
		- Any other info you find interesting…

* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be joining the Tweets table and the Users table")
	I'll be joining the Tweets and Users tables because I'd like to see how many times different Users tweets have been favorited
	I'll also be joining the Movies and Tweets tables because I want to compare favorite numbers to IMDB ratings

* What are at least 2 of the data processing mechanics you're planning to use? 
	itertools
	Map Builtin



* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
	itertools: might use zip_longest to help me aggregate more lists and easily compare tables and movies.
	Maps: I will use this to just make everything easier for me. I imagine I can clean a lot of data I get off the web using them to transform sequences.

* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
	I think it will be a .txt file and I want it to contain data on movie approval rating, gender of top billed cast and how popular that actor is on twitter. I hope to find some revealing things about popularity via gender.
